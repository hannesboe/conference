    Develop an informational system for conferences
    Entities are
        Speaker: A person that can have one or multiple talks
        Location: A location where a conference takes place
        Conference: A conference where talks are held with a start and end date (duration)
        Room: A room in a location
        Topic: An ontology of topics (one topic can have one or multiple parents and one or multiple children)
        Talk: 
            A talk is spoken by one or more speakers, on a specific conference in a specific room at a specific time. 
            A talk can be held on multiple conferences
            A talk has one or multiple Topics
    Required views (singly or combined)
        List of locations
        List of conferences
        All talks in a conference (global view)
        All talks for a specific room in a conference sorted by date and time (room flyer)
        List of topics and talks to this topic
    A backend must be provided
        Data owner for all data
        REST interface with security
        Full CRUD functionality (does not have to implemented fully)
    A frontend must be provided
        The frontend can must use the REST API
        One frontend has to be delivered (web, mobile or native)
    All components (including persistence and web frontend) must be running in Kubernetes
        I must be able to deploy everything in any Kubernetes environment (e.g. Minikube)
    The data must not be hardcoded, but imported somehow
    All components must offer full scalability
    The solution must be stageable (e.g. dev, qa and prod)
    The solution must offer optimal operations
        It must be possible to monitor various values, e.g. memory consumption and request performance via some monitoring tools
